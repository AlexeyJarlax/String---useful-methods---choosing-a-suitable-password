РАЗДЕЛИТЕЛЬ. Имена и фамилии перечислены через запятую ',' — разделитель.
Метод split(String regex) превращает строку в массив строк String[]. 
Элементы в строке разделяются по разделителю regex, который передаётся в метод.
Программа принимает строку excellent из имён и фамилий студентов, которые справились с экзаменом на «отлично», 
и с помощью цикла и методов String печатает их список.


public class Practicum {
    public static void main(String[] args) {
        String excellent = "Марина Голубева,Анна Иванова,Василий Рябов,Екатерина Белых,Иван Засонин";

        String[] split = excellent.split(",");

        for (String student: split) {
            System.out.println(student + " — отлично");
        }
    }
}


Результат
Марина Голубева — отлично
Анна Иванова — отлично
Василий Рябов — отлично
Екатерина Белых — отлично
Иван Засонин — отлично

====

Ещё немного про regex
Метод split(String regex) принимает в качестве аргумента не просто символ, а регулярное выражение (regex — сокращение от англ. regular expression). 
Регулярные выражения — это особые строки из обычных и специальных символов, которые используются для поиска. 
Ряд символов нельзя использовать напрямую как разделители. 
Это символы точки <.>, знака вопроса <?>, скобок <(>, <)>, <[>, <{>, доллара <$>, звёздочки <*>, плюса <+> и некоторые другие: <|>, <^>, <\>. 
Если элементы в строке разделены одним из таких символов, то при передаче в метод необходимо добавить два обратных слеша <\\>.
Преобразуйте строку dollarAssets в массив так, чтобы программа выдавала true при проверке его элементов.


public class Practicum {
    public static void main(String[] args) {
        String dollarAssets = "Акции$Облигации$Фонды$";

        
         String[] split = dollarAssets.split("\\$");
      
        System.out.println(split[0].equals("Акции"));
        System.out.println(split[1].equals("Облигации"));
        System.out.println(split[2].equals("Фонды"));
    }
}


Результат
true
true
true

====

Из массива в строку
Также может возникнуть необходимость провести операцию, обратную split(String regex) — «сборку» строки. 
Это бывает полезным, если требуется упаковать в строку массив. Для этого в классе String есть статический метод join(String delimeter, String... strs) 
( от англ. join — «соединять, объединять»).
К примеру, соберём в строку массив домашних питомцев arrayOfPets. Для этого просто передадим разделитель-запятую и массив в метод в качестве аргументов.


public class Practicum {
    public static void main(String[] args) {
        String[] arrayOfPets = new String[]{
                "Кот Батончик",
                "Хомяк Рафаэлка",
                "Попугай Картошка"
        };

        String pets = String.join(", ", arrayOfPets);

        System.out.println("Мои питомцы: " + pets);
    }
}


Результат
Мои питомцы: Кот Батончик, Хомяк Рафаэлка, Попугай Картошка
